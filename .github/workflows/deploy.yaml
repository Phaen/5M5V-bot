name: Deploy

on:
  push:
    branches:
      - dockerize-and-deploy # FIXME: temporary
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  DEPLOY_HOST: 206.189.96.198
  DEPLOY_USER: deploy

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Log stuff (temporary)
        run: |
          echo "${{ env.REGISTRY }}"
          echo "${{ env.IMAGE_NAME }}"
          echo "${{ steps.meta.outputs.tags }}"
          echo "${{ steps.meta.outputs.labels }}"
#
#      - name: Deploy Metabase to docker droplet
#        run: >
#          eval `ssh-agent -s` &&
#          ssh-add - <<< "${{ secrets.DEPLOY_PRIVATE_KEY }}" &&
#          ssh -o StrictHostKeyChecking=no ${DEPLOY_USER}@${DEPLOY_HOST} -C
#          "
#          docker pull ${{ env.REGISTRY }}/${{ steps.meta.outputs.tags }} &&
#          (docker stop ${SERVICE_NAME} && docker rm ${SERVICE_NAME} || true) &&
#          docker run -d \
#            -v \${HOME}/${SERVICE_NAME}:/metabase-data \
#            -e 'MB_DB_FILE=/metabase-data/metabase.db' \
#            --restart always \
#            --label traefik.enable=true \
#            --label traefik.http.middlewares.https-redirect.redirectscheme.scheme=https \
#            --label traefik.http.middlewares.https-redirect.redirectscheme.permanent=true \
#            --label traefik.http.routers.metabase-http.middlewares=https-redirect \
#            --label traefik.http.routers.metabase-http.rule=Host\(\\\`metabase.veganhacktivists.org\\\`\) \
#            --label traefik.http.routers.metabase-http.entrypoints=http \
#            --label traefik.http.routers.metabase-https.rule=Host\(\\\`metabase.veganhacktivists.org\\\`\) \
#            --label traefik.http.routers.metabase-https.tls.certresolver=le \
#            --label traefik.http.routers.metabase-https.tls=true \
#            --label traefik.http.routers.metabase-https.entrypoints=https \
#            --network=traefik-public \
#            --name ${SERVICE_NAME} \
#            metabase/metabase:${METABASE_TAG}
#          "
